package pp.exer;

/**
 * Created by pkpm on 2019/9/11
 */
public class exer {
    /**
     * 1. 猫狗队列
     *
     * 可以用add方法将猫或狗加入队列；
     * 可以用pollAll方法，将队列中所有实例按照先后顺序输出；
     * pollDog，将dog的实例按照先后顺序输出；
     * pollCat
     * isEmpty
     * isDogEmpty
     * isCatEmpty
     *
     *
     * 方案：使用两个队列，每个实例根据入队的先后顺序加一个索引或时间戳记录一下
     */

    /**
     * 3. 正方形矩阵旋转90度，额外空间O(1)
     *
     * 根据左上和右下确定一圈，每圈旋转
     */
    /**
     * 4. 之字打印矩阵，额外空间O(1)
     *
     *  分解为打印对角线的值
     *  确定对角线借助两个点A，B：A像右走，到最后一个向下；B向下走，到最下一个向右
     */
    /**
     * 5. 在排好序的矩阵中查找数
     * 矩阵matrix的每一行、每一列都是排好序的，判断k是否在矩阵中
     * 时间复杂度O(N+M),空间复杂度O(1)
     *
     * 从左下或右上开始遍历
     */

    /**
     * 11. 给定两个数组w 和 v,两个数组长度相等，w[i]表示第i件商品的重量，v[i]表示第i件商品的价值。
     * 再给定一个整数bag，要求你挑选商品的重量加起来一定不能超过bag，返回满足这个条件下，你能获得的最大价值。
     */
    /**
     * 13.打印一个字符串的全部子序列，包括空字符串。
     */
    /**
     * 14.打印一个字符串的全部排列
     * 进阶：要求不要出现重复的排列
     */
    /**
     * 15.汉诺塔问题
     *  打印n 层汉诺塔从最左边移动最右边的全部过程
     */
}
