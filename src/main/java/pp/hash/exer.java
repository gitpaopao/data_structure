package pp.hash;

/**
 * Created by pkpm on 2020/5/27
 */
public class exer {
    /**
     * 哈希函数：
     *      ① 输入域是无穷大的
     *      ② 输出域是有限的
     *      ③ 相同的输入，输出是一样的
     *      ④ 不同的输入，可能会有相同的输出(碰撞)
     *      ⑤ 散列性
     */
    /**
     * 6. 布隆过滤器(存在失误率)
     *  假设有一个100亿个URL的黑名单，来一个URL，判断是否在黑名单中
     *      准备一个长度为m的bit数组，k 个哈希函数，100亿个URL经过k个哈希函数，然后%m，得到k个值，然后将bit数组中的这k个位置置1.
     *      判断的过程同上，判断URL对应的 k个位置是否都是1。
     *
     *      int[] arr = new int[10];
     *      bit数组中第i个位置置1：arr[i/32] | (1 << (i%32))   i/32:来自第几个整数    i%32:是该整数的第几位
     *      取出第i个位置的值：arr[i/32] & (1 << (i%32)),如果得到0，则是0,；得到1，则是1.
     *  m 的设置取决于不同样本的数量和失误率p多少
     *  m = -(n*lnp) / (ln2)^2
     *  k = 0.7 * m/n
     *  p = (1-e^-n*k/m)^k
     */
    /**
     * 7.一致性哈希
     *  虚拟节点技术：
     */
}
